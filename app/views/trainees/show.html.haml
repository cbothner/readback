- title "Trainee — #{@trainee.name}"
- headline "#{@trainee.name}"
- subtitle (@trainee.broadcasters_exam.accepted? ? "Training History" : "DJ-in-training")
- if @trainee.broadcasters_exam.accepted?
  - back_link link_to 'Back to profile', @trainee.dj
- else
  - back_link link_to 'All Trainees', trainees_path


- content_for :sidebar do
  - unless @trainee.broadcasters_exam.accepted?
    %h3 Actions
    - unless @trainee.demotape.accepted? || @trainee.disqualified
      = form_for @trainee do |f|
        .field.padtop
          = f.label :demotape, "Accept demo tape"
          %p.instructions
            This message will be emailed to the trainee along with instructions
            for signing up for stage-two sessions and apprenticeships.
          = f.text_area :demotape, style: "height: 7em"
        .actions
          = f.submit "Accept Demo Tape",
            data: {confirm_with: "Are you sure?", disable_with: "Saving..."}
    - if current_dj.can_create?(Dj) && @trainee.demotape.accepted? && !@trainee.disqualified
      = form_for [@trainee, Dj.new] do |f|
        .field.padtop
          = label_tag "Graduate Trainee"
          %p.instructions
            Record that this trainee has passed the broadcaster’s exam, create a
            full DJ account for this trainee, and allow them to begin subbing for
            nighttime shows.  The trainee will receive an email to that effect.
          .actions
            = f.submit "Graduate Trainee",
              data: {confirm_with: "Are you sure? This action cannot be undone.",
                     disable_with: "Saving..."}
    - if current_dj.can_delete?(@trainee)
      = form_for @trainee do |f|
        .padtop.margintop
          - unless @trainee.disqualified
            = label_tag "Discontinue this person’s training"
            %p.instructions
              This trainee will not be able to access their account, and will
              receive no further reminder emails.  They will
              %strong not
              be automatically
              informed.
          - else
            = label_tag "Reinstate this disqualified trainee"
        .actions
          = f.hidden_field :disqualified, value: !@trainee.disqualified
          = f.submit (@trainee.disqualified ? "Reinstate trainee" : "Discontinue training"),
            data: {disable_with: "Saving..."}

.trainee{data: {interests: @trainee.interests}}
  .trainee-wide
    - if @trainee.disqualified
      .alert
        This person’s training has been discontinued.
    .dj-info
      %ul
        %li
          Attended Stage 1: 
          = @trainee.created_at.to_date
        %li
          Reminder Emails:
          = @trainee.sent_email
        - unless @trainee.broadcasters_exam.accepted?
          %li
            UM Affiliation:&nbsp;
            = @trainee.um_dept
            = Person::AFFILIATION_NAMES[@trainee.um_affiliation]
          - if @trainee.um_affiliated?
            %li
              UMID:
              = @trainee.um_id
          %br
          %li
            Phone:
            = @trainee.phone
          %li
            Email:
            = mail_to @trainee.email

    .interests.grey="Interests: #{@trainee.interests}"
    .longform
      Referral:
      %blockquote=@trainee.referral
    .longform.grey.padtop
      Experience:
      %blockquote=@trainee.experience
    - unless @trainee.um_affiliated?
      .longform.padtop
        Personal Statement:
        %blockquote=@trainee.statement
    - if @trainee.demotape.accepted?
      %hr
      .longform
        %span.green Demo Tape Accepted
        by
        = @trainee.demotape.accepting_dj
        = "(#{@trainee.demotape.timestamp.to_date})"
        %blockquote=@trainee.demotape.message
      - if @trainee.broadcasters_exam.accepted?
        .padtop
          = succeed '.' do
            %span.green Broadcaster’s Exam Passed
          Witnessed by
          = @trainee.broadcasters_exam.accepting_dj
          = "(#{@trainee.broadcasters_exam.timestamp.to_date})"

  .trainee-thin.padleft
    .dj-recent-episodes.minustop
      - @apprenticeships.each do |type, eps|
        - unless eps.empty?
          %h4.padtop=type.to_s.humanize.titlecase
          - eps.each do |ep|
            .dj-episode
              .showinfo
                %b<
                  =ep.show.unambiguous_name
                  ="?" unless ep.shadowed
                %p=ep.date_string
